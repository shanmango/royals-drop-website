{"version":3,"sources":["services/mobs.js","services/items.js","reducers/searchReducer.js","components/CategorySelector.js","components/Search.js","components/List.js","components/Mob.js","components/Item.js","components/Info.js","reducers/mobReducer.js","reducers/itemReducer.js","App.js","store.js","index.js"],"names":["baseUrl","exportedObject","getSearchList","a","axios","get","response","mobs","data","map","mob","drops","maps","getById","id","items","item","itemType","desc","searchReducer","state","category","selected","action","type","CategorySelector","props","dispatch","useDispatch","changeSearchType","event","setSearchItem","searchBy","mobSelected","useSelector","search","name","checked","onChange","Search","style","useState","searchItem","options","x","value","label","filterConfig","ignoreCase","ignoreAccents","trim","matchFrom","mobService","itemService","console","log","setSelected","length","components","DropdownIndicator","IndicatorSeparator","placeholder","isClearable","escapeClearsValue","filterOption","createFilter","List","list","listItem","Mob","Item","Info","reducer","App","useEffect","combineReducers","mobReducer","itemReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7e4dde5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/mobs'\n\n// Returns only mob name and game id\nconst getSearchList = async () => {\n  const response = await axios.get(baseUrl)\n  const mobs = response.data.map(mob => {\n    delete mob.drops\n    delete mob.maps\n    return mob\n  })\n  return mobs\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst exportedObject = {\n  getSearchList,\n  getById\n}\n\nexport default exportedObject","import axios from 'axios'\n\nconst baseUrl = '/api/items'\n\n// Returns only item name and game id\nconst getSearchList = async () => {\n  const response = await axios.get(baseUrl)\n  const items = response.data.map(item => {\n    delete item.itemType\n    delete item.desc\n    delete item.mobs\n    return item\n  })\n  return items\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst exportedObject = {\n  getSearchList,\n  getById\n}\n\nexport default exportedObject","import mobService from '../services/mobs'\nimport itemService from '../services/items'\nconst searchReducer = (state = { category: 'mobs', selected: null }, action) => {\n  switch (action.type) {\n    case 'SEARCH_BY':\n      return { ...state, category: action.category}\n    case 'SET_SELECTED':\n      return { ...state, selected: action.data }\n    case 'CLEAR_SELECTED':\n      return { ...state, selected: null }\n    default:\n      return state\n  }\n}\n\nexport const searchBy = category => {\n  return {\n    type: 'SEARCH_BY',\n    category\n  }\n}\n\nexport const setSelected = (selected, category) => {\n  return async dispatch => {\n    let data = null\n    if (selected) {\n      data = category === 'mobs' \n      ? await mobService.getById(selected.value) \n      : await itemService.getById(selected.value)\n      console.log(data)\n    }\n\n    dispatch({\n      type: 'SET_SELECTED',\n      data\n    })\n  }\n}\n\nexport const clearSelected = () => {\n  return {\n    type: 'CLEAR_SELECTED'\n  }\n}\n\nexport default searchReducer","import React from 'react'\nimport { searchBy, clearSelected } from '../reducers/searchReducer'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst CategorySelector = (props) => {\n  const dispatch = useDispatch()\n  // Clear selected if category type changed\n  const changeSearchType = (event, category) => {\n    props.setSearchItem(null)\n    dispatch(clearSelected())\n    dispatch(searchBy(category))\n  }\n\n  // Fix re-render clicking issue with radio buttons\n  const type = useSelector(state => state.search.category)\n  const mobSelected = type === 'mobs'\n\n  return (\n    <div>\n      Search by: &nbsp;\n      Mob <input type=\"radio\" name=\"typeselector\" checked={mobSelected}\n        onChange={(event) => changeSearchType(event, 'mobs')}/>\n        &nbsp;\n      Item <input type=\"radio\" name=\"typeselector\" checked={!mobSelected}\n        onChange={(event) => changeSearchType(event, 'items')} />\n    </div>\n  )\n}\n\nexport default CategorySelector","import React, { useState, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport WindowedSelect, { createFilter } from 'react-windowed-select'\nimport { setSelected } from '../reducers/searchReducer'\nimport CategorySelector from './CategorySelector'\n\n/**\n * Search bar component\n */\nconst Search = () => {\n  const dispatch = useDispatch()\n  const style = {\n    'maxWidth': '200pt'\n  }\n\n  // Functionality to clear search on category change click\n  const [searchItem, setSearchItem] = useState(null)\n\n\n  // Select dataset based on type state\n  let options = useSelector((state) => {\n    let data = []\n    if (state.search.category === 'mobs') {\n      data = state.mobs\n    } else {\n      data = state.items\n    }\n    if (data) {\n      return data.map(x => {\n        let object = {\n          value: x.id,\n          label: x.name\n        }\n        return object\n      })\n    } else {\n      return []\n    }\n  })\n\n  // Search by beginning of string\n  const filterConfig = {\n    ignoreCase: true,\n    ignoreAccents: true,\n    trim: true,\n    matchFrom: 'start'\n  }\n  \n  let category = useSelector(state => state.search.category)\n  const onChange = (event) => {\n    setSearchItem(event)\n    dispatch(setSelected(event, category))\n  }\n\n  // select bar\n  const selectBar = () => (\n    <div style={style}>\n      <WindowedSelect\n        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\n        style={style}\n        placeholder='Search for a mob or item'\n        isClearable\n        escapeClearsValue='true'\n        filterOption={createFilter(filterConfig)}\n        options={options}\n        onChange={onChange}\n        value={searchItem} />\n    </div>\n  )\n\n  const loadingMessage = () => (\n    <p>\n      Drop data is loading...\n    </p>\n  )\n\n  return (\n    <div>\n      <CategorySelector \n        setSearchItem={setSearchItem}\n      />\n      {options.length > 0 && selectBar()}\n      {options.length < 1 && loadingMessage()}\n    </div>\n  )\n}\n\nexport default Search","import React from 'react'\n\nconst List = ({list}) => {\n  console.log(list)\n\n  const description = (desc) => {\n    return (\n      <div style={{'display': 'inline'}}>&nbsp;&nbsp;{desc}</div>\n    )\n  }\n\n  if (list.length === 0) {\n    return (\n      <div>Either this data isn't available, or this item isn't dropped by any mob :(</div>\n    )\n  }\n  return (\n  <div>\n    {\n      list.map((listItem) => {\n          return (<div>\n            <b>{listItem.name}</b>\n            {listItem.desc && description(listItem.desc)}\n            </div>)\n      })\n    }\n  </div>\n  )\n}\n\nexport default List","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport List from './List'\nconst Mob = () => {\n  const mob = useSelector(state => state.search.selected)\n  console.log(mob)\n  return (\n    <div>\n      <h4>{mob.name}</h4>\n      <h5>Drops:</h5>\n      <List list={mob.drops} />\n    </div>\n  )\n}\n\nexport default Mob","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport List from './List'\nconst Item = () => {\n  const item = useSelector(state => state.search.selected)\n  \n  return (\n    <div>\n      <h4>{item.name}</h4>\n      <h5>Mobs that drop this item:</h5>\n      <List list={item.mobs} /> \n    </div>\n  )\n}\n\nexport default Item","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Mob from './Mob'\nimport Item from './Item'\nconst Info = () => {\n  const search = useSelector(state => state.search)\n\n  const Display = () => (\n      <div>\n        {search.category === 'mobs' && <Mob />}\n        {search.category === 'items' && <Item />}\n      </div>\n    )\n  \n\n  return (\n    <div>\n      {search.selected && Display()}\n    </div>\n  )\n}\n\nexport default Info","import mobService from '../services/mobs'\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ('INIT_MOBS'):\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initializeMobs = () => {\r\n  return async dispatch => {\r\n    const mobs = await mobService.getSearchList()\r\n    console.log('initialize mobs')\r\n    dispatch({\r\n      type: 'INIT_MOBS',\r\n      data: mobs\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import itemService from '../services/items'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ('INIT_ITEMS'):\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeItems = () => {\n  return async dispatch => {\n    const items = await itemService.getSearchList()\n    console.log('intiialize items')\n    dispatch({\n      type: 'INIT_ITEMS',\n      data: items\n    })\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Search from './components/Search'\nimport Info from './components/Info'\n\nimport { initializeMobs } from './reducers/mobReducer'\nimport { initializeItems } from './reducers/itemReducer'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeMobs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeItems())\n  }, [dispatch])\n\n  return (\n    <div>\n      <h1>MapleRoyals Drop Tracker</h1>\n      Version: 73.4\n      <hr></hr>\n      <Search />\n      <Info />\n    </div>\n\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport mobReducer from './reducers/mobReducer'\nimport itemReducer from './reducers/itemReducer'\nimport searchReducer from './reducers/searchReducer'\n\nconst reducer = combineReducers({\n  mobs: mobReducer,\n  items: itemReducer,\n  search: searchReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}