{"version":3,"sources":["img/mr.png","components/Header.js","utils/helpers.js","components/CategorySelector.js","services/items.js","services/mobs.js","components/ListItem.js","components/List.js","components/InfoDisplay.js","components/Search.js","components/Footer.js","components/AppContainer.js","reducers/mobReducer.js","reducers/itemReducer.js","App.js","store.js","index.js"],"names":["Header","history","useHistory","className","id","onClick","push","src","logo","alt","useCategory","category","useLocation","pathname","split","parseDesc","desc","replaceAll","replace","CategorySelector","ToggleButtonGroup","type","name","value","onChange","event","changeSearchType","ToggleButton","variant","baseUrl","exportedObject","getSearchList","a","axios","get","response","items","data","filter","item","mobs","length","map","itemType","getById","mob","drops","maps","ListItem","listItem","useParams","parsedDesc","imgUrl","searchClickedItem","dangerouslySetInnerHTML","__html","List","list","sort","b","toLowerCase","localeCompare","Table","hover","striped","style","InfoDisplay","useState","setData","service","mobService","itemService","useEffect","then","Display","caption","Search","options","useSelector","state","x","label","filterConfig","ignoreCase","ignoreAccents","trim","components","DropdownIndicator","IndicatorSeparator","placeholder","isClearable","escapeClearsValue","filterOption","createFilter","path","component","Footer","href","AppContainer","visible","setVisible","onScroll","target","scrollTop","listenToScroll","Button","size","parentElement","console","log","scrollToTop","reducer","action","App","dispatch","useDispatch","combineReducers","mobReducer","itemReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40008388.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mr.8c9042d9.png\";","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../styles/Header.scss'\r\nimport logo from '../img/mr.png'\r\nconst Header = () => {\r\n  const history = useHistory()\r\n  const handleClick = () => {\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <div className=\"text-center\" id=\"banner\">\r\n      <div id=\"title\" onClick={handleClick}>\r\n        <h1>An Unofficial</h1>\r\n        <img id=\"royals\" src={logo} alt=\"MapleRoyals\"/>\r\n        <h1>Drop Tracker</h1>\r\n      </div>\r\n      <h6> Game Version: 74 </h6>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import { useLocation } from \"react-router-dom\"\n\nexport const useCategory = () => {\n  const location = useLocation()\n  const pathname = location.pathname\n  const category = pathname.split('/')[2]\n  if (category)\n    return category\n  else \n    return 'mobs'\n\n}\n\nexport const parseDesc = (desc) => {\n  desc = desc.replaceAll('\\\\n', ' <br> ')\n  desc = desc.replace('#c', '<b>')\n  desc = desc.replace('#', '</b>')\n  return desc\n}","import React from 'react'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport '../styles/CategorySelector.scss'\r\nimport { useCategory } from '../utils/helpers.js'\r\n\r\nconst CategorySelector = () => {\r\n  const history = useHistory()\r\n  let category = useCategory()\r\n\r\n  const changeSearchType = (event) => {\r\n    history.push(`/search/${event}`)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      Search by: &nbsp;\r\n      <ToggleButtonGroup\r\n        type=\"radio\"\r\n        name=\"type-selector\"\r\n        value={category}\r\n        onChange={(event) => changeSearchType(event)}>\r\n        <ToggleButton id=\"mobs-radio\" value=\"mobs\" variant=\"outline-dark\">Mobs</ToggleButton>\r\n        <ToggleButton id=\"items-radio\" value=\"items\" variant=\"outline-dark\">Items</ToggleButton>\r\n\r\n      </ToggleButtonGroup>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default CategorySelector","import axios from 'axios'\n\nconst baseUrl = '/api/items'\n\n// Returns only item name and game id\nconst getSearchList = async () => {\n  const response = await axios.get(baseUrl)\n  let items = response.data.filter(item => {\n    return item.mobs.length\n  })\n  items = items.map(item => {\n    delete item.itemType\n    delete item.desc\n    delete item.mobs\n    return item\n  })\n\n  return items\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst exportedObject = {\n  getSearchList,\n  getById\n}\n\nexport default exportedObject","import axios from 'axios'\n\nconst baseUrl = '/api/mobs'\n\n// Returns only mob name and game id\nconst getSearchList = async () => {\n  const response = await axios.get(baseUrl)\n  const mobs = response.data.map(mob => {\n    delete mob.drops\n    delete mob.maps\n    return mob\n  })\n  return mobs\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst exportedObject = {\n  getSearchList,\n  getById\n}\n\nexport default exportedObject","import React from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { parseDesc } from '../utils/helpers'\r\nimport '../styles/ListItem.scss'\r\n\r\nconst ListItem = ({ listItem }) => {\r\n  const history = useHistory()\r\n  // Set right image source url\r\n  const category = useParams().category\r\n  const parsedDesc = listItem.desc ? parseDesc(listItem.desc) : ''\r\n  let imgUrl = category === 'mobs'\r\n    ? `https://maplestory.io/api/SEA/198/item/${listItem.id}/icon?resize=1.5`\r\n    : `https://maplestory.io/api/SEA/198/mob/${listItem.id}/render/stand`\r\n\r\n  const searchClickedItem = async (listItem, category) => {\r\n    category = category === 'mobs' ? 'items' : 'mobs'\r\n    history.push(`/search/${category}/${listItem.id}`)\r\n  }\r\n\r\n  return (\r\n    <tr className=\"info-row\" onClick={() => searchClickedItem(listItem, category)}>\r\n      <td>\r\n        <div className=\"info-name\">{listItem.name}</div>\r\n        {listItem.desc && <div className=\"info-desc\" dangerouslySetInnerHTML={{__html: parsedDesc}} />}\r\n      </td>\r\n      <td className=\"image-column\">\r\n        <div className=\"image-column-container\">\r\n          <img src={imgUrl} alt='img' />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default ListItem","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport ListItem from './ListItem'\r\n\r\n\r\nconst List = ({ list }) => {\r\n  if (list.length === 0) {\r\n    return (\r\n      <div>This mob doesn't drop anything :(</div>\r\n    )\r\n  }\r\n\r\n  list.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <Table hover striped style={{\"marginBottom\":\"0\"}}>\r\n        <tbody>\r\n          {\r\n            list.map((listItem) => {\r\n              return (\r\n                <ListItem listItem={listItem} key={listItem.id} />\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </Table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport itemService from '../services/items'\r\nimport mobService from '../services/mobs'\r\nimport { parseDesc } from '../utils/helpers'\r\n\r\nimport List from './List'\r\nimport '../styles/InfoDisplay.scss'\r\n\r\nconst InfoDisplay = () => {\r\n  const id = useParams().id\r\n  const category = useParams().category\r\n  const [data, setData] = useState(null)\r\n  const service = category === 'mobs' ? mobService : itemService\r\n  \r\n  useEffect(() => {\r\n    service.getById(id).then(response =>\r\n      setData(response)\r\n    )\r\n  }, [id, service])\r\n\r\n  let Display = () => {\r\n    let imgUrl\r\n    let caption\r\n    let list\r\n    let parsedDesc = data.desc ? parseDesc(data.desc) : ''\r\n      if (category === 'items') {\r\n        imgUrl = `https://maplestory.io/api/SEA/198/item/${id}/icon?resize=1.5`\r\n        caption = 'Mobs That Drop This Item:'\r\n        list = data.mobs\r\n      } else {\r\n        imgUrl = `https://maplestory.io/api/SEA/198/mob/${id}/render/stand`\r\n        caption = 'Items That This Mob Drops:'\r\n        list = data.drops\r\n      }\r\n    \r\n      return (\r\n        <div id=\"info-display\" className=\"card\">\r\n          <div id=\"selected-item\">\r\n            <div id=\"selected-name\">\r\n              <h2>{data.name}</h2>\r\n              {data.desc && <div dangerouslySetInnerHTML={{__html: parsedDesc}}/>}\r\n            </div>\r\n            <div id=\"search-image-container\" className=\"card\">\r\n              <img src={imgUrl} alt='img' />\r\n            </div>\r\n          </div>\r\n          <h4 id=\"caption\">{caption}</h4>\r\n          <List list={list} />\r\n        </div>\r\n      )\r\n  }\r\n  return (\r\n    <div>{data && data.id === id && <Display />}</div>\r\n  )\r\n  \r\n\r\n}\r\n\r\nexport default InfoDisplay","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Select, { createFilter } from 'react-select'\r\nimport { useHistory, Route } from 'react-router-dom'\r\nimport CategorySelector from './CategorySelector'\r\nimport { useCategory } from '../utils/helpers.js'\r\nimport InfoDisplay from './InfoDisplay'\r\nimport '../styles/Search.scss'\r\n\r\n\r\nconst Search = () => {\r\n  const history = useHistory()\r\n  let category = useCategory()\r\n  // Select dataset based on type state\r\n  const options = useSelector((state) => {\r\n    let data = []\r\n    if (category === 'mobs') {\r\n      data = state.mobs\r\n    } else {\r\n      data = state.items\r\n    }\r\n    if (data) {\r\n      return data.map(x => {\r\n        let object = {\r\n          value: x.id,\r\n          label: x.name\r\n        }\r\n        return object\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  })\r\n\r\n  // Search by beginning of string\r\n  const filterConfig = {\r\n    ignoreCase: true,\r\n    ignoreAccents: true,\r\n    trim: true\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    event ?\r\n    history.push(`/search/${category}/${event.value}`)\r\n    : history.push(`/search/${category}`)\r\n  }\r\n\r\n  // select bar\r\n  const selectBar = () => (\r\n    <Select\r\n      components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n      placeholder='Search for a mob or item'\r\n      isClearable\r\n      escapeClearsValue='true'\r\n      filterOption={createFilter(filterConfig)}\r\n      options={options}\r\n      onChange={onChange}\r\n      value={''} />\r\n  )\r\n\r\n  const loadingMessage = () => (\r\n    <p>\r\n      Drop data is loading...\r\n    </p>\r\n  )\r\n\r\n  return (\r\n    <div id=\"search-body\">\r\n      <div>\r\n        <CategorySelector />\r\n        {options.length > 0 && selectBar()}\r\n        {options.length < 1 && loadingMessage()}\r\n      </div>\r\n      <Route path='/search/:category/:id' component={InfoDisplay} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport '../styles/Footer.scss'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <p>\r\n        This website not affiliated, associated, authorized, endorsed by,\r\n        or in any way officially connected with MapleRoyals.\r\n        <br />The drop data used for this website was taken from the\r\n        Monster Book data in the Data folder of the MapleRoyals client.\r\n        This website simply displays this data.\r\n        </p>\r\n\r\n        <p>Images were taken from <a href=\"https://maplestory.io\">maplestory.io</a>\r\n          <br />Created by: Shanmango\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Header from './Header'\r\nimport Search from './Search'\r\nimport Footer from './Footer'\r\n\r\n\r\n\r\nconst AppContainer = () => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const listenToScroll = (event) => {\r\n    if (event.target.scrollTop >= 300) {\r\n      setVisible(true)\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n  }\r\n\r\n  const scrollToTop = (event) => {\r\n    event.target.parentElement.scrollTop = 0\r\n    console.log(event.target.parentElement.scrollTop)\r\n  }\r\n\r\n  const BackToTopButton = () => {\r\n    return (\r\n      <Button\r\n        id='back-to-top'\r\n        variant=\"secondary\"\r\n        size='sm'\r\n        onClick={(event) => scrollToTop(event)}\r\n      >Back To Top</Button>\r\n    )\r\n  }\r\n  return (\r\n    <div className='container' onScroll={(event) => listenToScroll(event)}>\r\n      <Header />\r\n      <Search />\r\n      <Footer />\r\n      {visible && BackToTopButton()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppContainer","import mobService from '../services/mobs'\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ('INIT_MOBS'):\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initializeMobs = () => {\r\n  return async dispatch => {\r\n    const mobs = await mobService.getSearchList()\r\n    console.log('initialize mobs')\r\n    dispatch({\r\n      type: 'INIT_MOBS',\r\n      data: mobs\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import itemService from '../services/items'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ('INIT_ITEMS'):\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeItems = () => {\n  return async dispatch => {\n    const items = await itemService.getSearchList()\n    console.log('intiialize items')\n    dispatch({\n      type: 'INIT_ITEMS',\n      data: items\n    })\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './styles/App.scss'\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\n\r\n\r\nimport AppContainer from './components/AppContainer'\r\n\r\nimport { initializeMobs } from './reducers/mobReducer'\r\nimport { initializeItems } from './reducers/itemReducer'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeMobs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeItems())\r\n  }, [dispatch])\r\n\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n          <AppContainer />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport mobReducer from './reducers/mobReducer'\r\nimport itemReducer from './reducers/itemReducer'\r\n\r\nconst reducer = combineReducers({\r\n  mobs: mobReducer,\r\n  items: itemReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './styles/index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}