{"version":3,"sources":["components/Header.js","services/mobs.js","services/items.js","reducers/searchReducer.js","components/CategorySelector.js","components/ListItem.js","components/List.js","components/Mob.js","components/Item.js","components/Info.js","components/Search.js","reducers/mobReducer.js","reducers/itemReducer.js","App.js","store.js","index.js"],"names":["Header","className","style","display","baseUrl","exportedObject","getSearchList","a","axios","get","response","mobs","data","map","mob","drops","maps","getById","id","items","filter","item","length","itemType","desc","searchBy","category","type","setSelected","selected","dispatch","mobService","value","itemService","searchReducer","state","action","CategorySelector","useDispatch","changeSearchType","mobSelected","useSelector","search","name","checked","onChange","event","ListItem","listItem","imgUrl","onClick","searchClickedItem","src","alt","List","list","Table","striped","Mob","Item","Info","Search","options","x","label","filterConfig","ignoreCase","ignoreAccents","trim","matchFrom","components","DropdownIndicator","IndicatorSeparator","placeholder","isClearable","escapeClearsValue","filterOption","createFilter","reducer","App","useEffect","console","log","combineReducers","mobReducer","itemReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d53f101.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <div className=\"text-center\">\n      <h1>MapleRoyals Drop Tracker</h1>\n\n      <div style={{ display: 'inline' }}>\n        Game Version: 73.4\n      </div>\n      <div style={{ display: 'inline' }}>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Created By: Shanmango\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import axios from 'axios'\n\nconst baseUrl = '/api/mobs'\n\n// Returns only mob name and game id\nconst getSearchList = async () => {\n  const response = await axios.get(baseUrl)\n  const mobs = response.data.map(mob => {\n    delete mob.drops\n    delete mob.maps\n    return mob\n  })\n  return mobs\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst exportedObject = {\n  getSearchList,\n  getById\n}\n\nexport default exportedObject","import axios from 'axios'\n\nconst baseUrl = '/api/items'\n\n// Returns only item name and game id\nconst getSearchList = async () => {\n  const response = await axios.get(baseUrl)\n  let items = response.data.filter(item => {\n    return item.mobs.length\n  })\n  items = items.map(item => {\n    delete item.itemType\n    delete item.desc\n    delete item.mobs\n    return item\n  })\n\n  return items\n}\n\nconst getById = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst exportedObject = {\n  getSearchList,\n  getById\n}\n\nexport default exportedObject","import mobService from '../services/mobs'\nimport itemService from '../services/items'\nconst searchReducer = (state = { category: 'mobs', selected: null }, action) => {\n  switch (action.type) {\n    case 'SEARCH_BY':\n      return { ...state, category: action.category}\n    case 'SET_SELECTED':\n      return { ...state, selected: action.data }\n    case 'CLEAR_SELECTED':\n      return { ...state, selected: null }\n    default:\n      return state\n  }\n}\n\nexport const searchBy = category => {\n  return {\n    type: 'SEARCH_BY',\n    category\n  }\n}\n\nexport const setSelected = (selected, category) => {\n  return async dispatch => {\n    let data = null\n    if (selected) {\n      data = category === 'mobs' \n      ? await mobService.getById(selected.value) \n      : await itemService.getById(selected.value)\n    }\n\n    dispatch({\n      type: 'SET_SELECTED',\n      data\n    })\n  }\n}\n\nexport const clearSelected = () => {\n  return {\n    type: 'CLEAR_SELECTED'\n  }\n}\n\nexport default searchReducer","import React from 'react'\r\nimport { searchBy, clearSelected } from '../reducers/searchReducer'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nconst CategorySelector = () => {\r\n  const dispatch = useDispatch()\r\n  // Clear selected if category type changed\r\n  const changeSearchType = (category) => {\r\n    dispatch(clearSelected())\r\n    dispatch(searchBy(category))\r\n  }\r\n\r\n  // Fix re-render clicking issue with radio buttons\r\n  const type = useSelector(state => state.search.category)\r\n  const mobSelected = type === 'mobs'\r\n\r\n  return (\r\n    <div>\r\n      Search by: &nbsp;\r\n      Mob <input type=\"radio\" name=\"typeselector\" checked={mobSelected}\r\n        onChange={(event) => changeSearchType('mobs')}/>\r\n        &nbsp;\r\n      Item <input type=\"radio\" name=\"typeselector\" checked={!mobSelected}\r\n        onChange={(event) => changeSearchType('items')} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategorySelector","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearSelected, searchBy, setSelected } from '../reducers/searchReducer'\n\nconst ListItem = ({listItem}) => {\n  const dispatch = useDispatch()\n\n  // Set right image source url\n  const category = useSelector(state => state.search.category)\n  let imgUrl = category === 'mobs'\n  ? `https://maplestory.io/api/GMS/210.1.1/item/${listItem.id}/icon?resize=1.5`\n  : `https://maplestory.io/api/GMS/210.1.1/mob/${listItem.id}/render/stand`\n\n  const searchClickedItem = (listItem, category) => {\n    category = category === 'mobs' ? 'items' : 'mobs'\n    dispatch(clearSelected())\n    dispatch(searchBy(category))\n    dispatch(setSelected({value: listItem.id}, category))\n    \n  }\n\n  return (\n    <tr onClick={() => searchClickedItem(listItem, category)}>\n      <td>\n        <div>{listItem.name}</div>\n        {listItem.desc && <div>{listItem.desc}</div>}\n      </td>\n      <td>\n        <img src={imgUrl} alt='img'/>\n      </td>\n    </tr>\n  )\n}\n\nexport default ListItem","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport ListItem from './ListItem'\r\n\r\n\r\nconst List = ({ list }) => {\r\n  if (list.length === 0) {\r\n    return (\r\n      <div>Either this data isn't available, or this item isn't dropped by any mob :(</div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <Table striped>\r\n        <tbody>\r\n          {\r\n            list.map((listItem) => {\r\n              return (\r\n                <ListItem listItem={listItem} key={listItem.id} />\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </Table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport List from './List'\r\nconst Mob = () => {\r\n  const mob = useSelector(state => state.search.selected)\r\n  return (\r\n    <div>\r\n      <h4>{mob.name}</h4>\r\n      <h5>Drops:</h5>\r\n      <List list={mob.drops} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mob","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport List from './List'\r\nconst Item = () => {\r\n  const item = useSelector(state => state.search.selected)\r\n  \r\n  return (\r\n    <div>\r\n      <h4>{item.name}</h4>\r\n      <h5>Mobs that drop this item:</h5>\r\n      <List list={item.mobs} /> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Mob from './Mob'\r\nimport Item from './Item'\r\nconst Info = () => {\r\n  const search = useSelector(state => state.search)\r\n\r\n  const Display = () => (\r\n      <div>\r\n        {search.category === 'mobs' && <Mob />}\r\n        {search.category === 'items' && <Item />}\r\n      </div>\r\n    )\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {search.selected && Display()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Select, { createFilter } from 'react-select'\r\nimport { setSelected } from '../reducers/searchReducer'\r\nimport CategorySelector from './CategorySelector'\r\nimport Info from './Info'\r\n\r\n/**\r\n * Search bar component\r\n */\r\nconst Search = () => {\r\n  const dispatch = useDispatch()\r\n  const style = {\r\n    'maxWidth': '200pt'\r\n  }\r\n\r\n  // Select dataset based on type state\r\n  const options = useSelector((state) => {\r\n    let data = []\r\n    if (state.search.category === 'mobs') {\r\n      data = state.mobs\r\n    } else {\r\n      data = state.items\r\n    }\r\n    if (data) {\r\n      return data.map(x => {\r\n        let object = {\r\n          value: x.id,\r\n          label: x.name\r\n        }\r\n        return object\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  })\r\n\r\n  // Search by beginning of string\r\n  const filterConfig = {\r\n    ignoreCase: true,\r\n    ignoreAccents: true,\r\n    trim: true,\r\n    matchFrom: 'start'\r\n  }\r\n\r\n  let category = useSelector(state => state.search.category)\r\n  const onChange = (event) => {\r\n    dispatch(setSelected(event, category))\r\n  }\r\n\r\n  // select bar\r\n  const selectBar = () => (\r\n    <div style={style}>\r\n      <Select\r\n        components={{ DropdownIndicator: () => null, IndicatorSeparator: () => null }}\r\n        style={style}\r\n        placeholder='Search for a mob or item'\r\n        isClearable\r\n        escapeClearsValue='true'\r\n        filterOption={createFilter(filterConfig)}\r\n        options={options}\r\n        onChange={onChange}\r\n        value={''} />\r\n    </div>\r\n  )\r\n\r\n  const loadingMessage = () => (\r\n    <p>\r\n      Drop data is loading...\r\n    </p>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <CategorySelector />\r\n      {options.length > 0 && selectBar()}\r\n      {options.length < 1 && loadingMessage()}\r\n      <Info />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import mobService from '../services/mobs'\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ('INIT_MOBS'):\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initializeMobs = () => {\r\n  return async dispatch => {\r\n    const mobs = await mobService.getSearchList()\r\n    console.log('initialize mobs')\r\n    dispatch({\r\n      type: 'INIT_MOBS',\r\n      data: mobs\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import itemService from '../services/items'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ('INIT_ITEMS'):\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeItems = () => {\n  return async dispatch => {\n    const items = await itemService.getSearchList()\n    console.log('intiialize items')\n    dispatch({\n      type: 'INIT_ITEMS',\n      data: items\n    })\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Header from './components/Header'\r\nimport Search from './components/Search'\r\n\r\nimport { initializeMobs } from './reducers/mobReducer'\r\nimport { initializeItems } from './reducers/itemReducer'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeMobs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeItems())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <hr></hr>\r\n      <Search />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport mobReducer from './reducers/mobReducer'\nimport itemReducer from './reducers/itemReducer'\nimport searchReducer from './reducers/searchReducer'\n\nconst reducer = combineReducers({\n  mobs: mobReducer,\n  items: itemReducer,\n  search: searchReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}